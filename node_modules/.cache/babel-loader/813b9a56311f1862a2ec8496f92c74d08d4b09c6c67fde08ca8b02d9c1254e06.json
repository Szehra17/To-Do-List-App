{"ast":null,"code":"var _jsxFileName = \"/Users/thaihanguyen/Documents/Challenges/To-Do-List-App/src/components/TaskStatusButton.js\";\nimport React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskStatusButton = ({\n  currentStatus,\n  onStatusChange\n}) => {\n  const getButtonLabel = () => {\n    switch (currentStatus) {\n      case \"Not Status\":\n        return \"Accept Task\";\n      case \"In-progress\":\n        return \"Mark to Review\";\n      case \"Review\":\n        return \"Mark Completed\";\n      case \"Completed\":\n        return \"Task Completed\";\n      // This can be a message or label as you deem fit\n      default:\n        return \"Accept Task\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    onClick: onStatusChange,\n    children: getButtonLabel()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskStatusButton;\nexport default TaskStatusButton;\nvar _c;\n$RefreshReg$(_c, \"TaskStatusButton\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","TaskStatusButton","currentStatus","onStatusChange","getButtonLabel","variant","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thaihanguyen/Documents/Challenges/To-Do-List-App/src/components/TaskStatusButton.js"],"sourcesContent":["import React from \"react\";\nimport Button from \"@mui/material/Button\";\n\nconst TaskStatusButton = ({ currentStatus, onStatusChange }) => {\n  const getButtonLabel = () => {\n    switch (currentStatus) {\n      case \"Not Status\":\n        return \"Accept Task\";\n      case \"In-progress\":\n        return \"Mark to Review\";\n      case \"Review\":\n        return \"Mark Completed\";\n      case \"Completed\":\n        return \"Task Completed\"; // This can be a message or label as you deem fit\n      default:\n        return \"Accept Task\";\n    }\n  };\n\n  return (\n    <Button variant=\"contained\" onClick={onStatusChange}>\n      {getButtonLabel()}\n    </Button>\n  );\n};\n\nexport default TaskStatusButton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAe,CAAC,KAAK;EAC9D,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,QAAQF,aAAa;MACnB,KAAK,YAAY;QACf,OAAO,aAAa;MACtB,KAAK,aAAa;QAChB,OAAO,gBAAgB;MACzB,KAAK,QAAQ;QACX,OAAO,gBAAgB;MACzB,KAAK,WAAW;QACd,OAAO,gBAAgB;MAAE;MAC3B;QACE,OAAO,aAAa;IACxB;EACF,CAAC;EAED,oBACEF,OAAA,CAACF,MAAM;IAACO,OAAO,EAAC,WAAW;IAACC,OAAO,EAAEH,cAAe;IAAAI,QAAA,EACjDH,cAAc,CAAC;EAAC;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEb,CAAC;AAACC,EAAA,GArBIX,gBAAgB;AAuBtB,eAAeA,gBAAgB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}