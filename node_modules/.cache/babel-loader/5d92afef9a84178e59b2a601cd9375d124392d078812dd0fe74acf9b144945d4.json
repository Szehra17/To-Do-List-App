{"ast":null,"code":"var _jsxFileName = \"/Users/thaihanguyen/Documents/Challenges/To-Do-List-App/src/components/TaskStatusButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskStatusButton = () => {\n  _s();\n  const statuses = [\"Accept Task\", \"Make to Review\", \"Mark Completed\"];\n  const [currentStatusIndex, setCurrentStatusIndex] = useState(0);\n  const handleStatusChange = () => {\n    // Update the index to the next status\n    setCurrentStatusIndex(prevIndex => (prevIndex + 1) % statuses.length);\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    onClick: handleStatusChange,\n    children: statuses[currentStatusIndex]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskStatusButton, \"bE468MJju336r+zh9Thx0ouhhag=\");\n_c = TaskStatusButton;\nexport default TaskStatusButton;\nvar _c;\n$RefreshReg$(_c, \"TaskStatusButton\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","TaskStatusButton","_s","statuses","currentStatusIndex","setCurrentStatusIndex","handleStatusChange","prevIndex","length","variant","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thaihanguyen/Documents/Challenges/To-Do-List-App/src/components/TaskStatusButton.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\n\nconst TaskStatusButton = () => {\n  const statuses = [\"Accept Task\", \"Make to Review\", \"Mark Completed\"];\n  const [currentStatusIndex, setCurrentStatusIndex] = useState(0);\n\n  const handleStatusChange = () => {\n    // Update the index to the next status\n    setCurrentStatusIndex((prevIndex) => (prevIndex + 1) % statuses.length);\n  };\n\n  return (\n    <Button variant=\"contained\" onClick={handleStatusChange}>\n      {statuses[currentStatusIndex]}\n    </Button>\n  );\n};\n\nexport default TaskStatusButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAG,CAAC,aAAa,EAAE,gBAAgB,EAAE,gBAAgB,CAAC;EACpE,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAE/D,MAAMS,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACAD,qBAAqB,CAAEE,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIJ,QAAQ,CAACK,MAAM,CAAC;EACzE,CAAC;EAED,oBACER,OAAA,CAACF,MAAM;IAACW,OAAO,EAAC,WAAW;IAACC,OAAO,EAAEJ,kBAAmB;IAAAK,QAAA,EACrDR,QAAQ,CAACC,kBAAkB;EAAC;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEb,CAAC;AAACb,EAAA,CAdID,gBAAgB;AAAAe,EAAA,GAAhBf,gBAAgB;AAgBtB,eAAeA,gBAAgB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}