{"ast":null,"code":"var _jsxFileName = \"/Users/thaihanguyen/Documents/Challenges/To-Do-List-App/src/components/TaskStatusButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskStatusButton = () => {\n  _s();\n  const [status, setStatus] = useState(\"Accept Task\"); // Initial status\n\n  const handleStatusChange = () => {\n    // Determine the next status\n    switch (status) {\n      case \"Accept Task\":\n        setStatus(\"Make to Review\");\n        break;\n      case \"Make to Review\":\n        setStatus(\"Mark Completed\");\n        break;\n      case \"Mark Completed\":\n        setStatus(\"Accept Task\");\n        break;\n      default:\n        setStatus(\"Accept Task\");\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    onClick: handleStatusChange,\n    children: status\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskStatusButton, \"F6ni+rtxH6oobcF3SAojrDV5XyI=\");\n_c = TaskStatusButton;\nexport default TaskStatusButton;\nvar _c;\n$RefreshReg$(_c, \"TaskStatusButton\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","TaskStatusButton","_s","status","setStatus","handleStatusChange","variant","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thaihanguyen/Documents/Challenges/To-Do-List-App/src/components/TaskStatusButton.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\n\nconst TaskStatusButton = () => {\n  const [status, setStatus] = useState(\"Accept Task\"); // Initial status\n\n  const handleStatusChange = () => {\n    // Determine the next status\n    switch (status) {\n      case \"Accept Task\":\n        setStatus(\"Make to Review\");\n        break;\n      case \"Make to Review\":\n        setStatus(\"Mark Completed\");\n        break;\n      case \"Mark Completed\":\n        setStatus(\"Accept Task\");\n        break;\n      default:\n        setStatus(\"Accept Task\");\n        break;\n    }\n  };\n\n  return (\n    <Button variant=\"contained\" onClick={handleStatusChange}>\n      {status}\n    </Button>\n  );\n};\n\nexport default TaskStatusButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;;EAErD,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACA,QAAQF,MAAM;MACZ,KAAK,aAAa;QAChBC,SAAS,CAAC,gBAAgB,CAAC;QAC3B;MACF,KAAK,gBAAgB;QACnBA,SAAS,CAAC,gBAAgB,CAAC;QAC3B;MACF,KAAK,gBAAgB;QACnBA,SAAS,CAAC,aAAa,CAAC;QACxB;MACF;QACEA,SAAS,CAAC,aAAa,CAAC;QACxB;IACJ;EACF,CAAC;EAED,oBACEJ,OAAA,CAACF,MAAM;IAACQ,OAAO,EAAC,WAAW;IAACC,OAAO,EAAEF,kBAAmB;IAAAG,QAAA,EACrDL;EAAM;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb,CAAC;AAACV,EAAA,CA1BID,gBAAgB;AAAAY,EAAA,GAAhBZ,gBAAgB;AA4BtB,eAAeA,gBAAgB;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}