{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Container from\"@mui/material/Container\";import Box from\"@mui/material/Box\";import Header from\"./components/Header\";import AddTaskForm from\"./components/AddTaskForm\";import Tasks from\"./components/Tasks\";import Footer from\"./components/Footer\";import MenuItem from\"@mui/material/MenuItem\";import Select from\"@mui/material/Select\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[tasks,setTasks]=useState([]);const[isLoaded,setLoaded]=useState(false);const[showAddTask,setShowAddTask]=useState(false);const[sortStatus,setSortStatus]=useState(\"\");// Load tasks from localStorage on initial render\n//useEffect(callback, [variables to listen to] );\nuseEffect(()=>{const savedTasks=JSON.parse(localStorage.getItem(\"tasks\"))||[];setTasks(savedTasks);setLoaded(true);},[]);// Save tasks to localStorage whenever tasks array changes\nuseEffect(()=>{if(!isLoaded)return;localStorage.setItem(\"tasks\",JSON.stringify(tasks));},[tasks]);// Add Task\nconst addTask=task=>{const newTask={id:Date.now(),...task};setTasks([...tasks,newTask]);};// Edit Task\nconst editTask=updatedTask=>{setTasks(tasks.map(task=>task.id===updatedTask.id?updatedTask:task));// Optional: Save the updated task list to localStorage if needed\nlocalStorage.setItem('tasks',JSON.stringify(tasks.map(task=>task.id===updatedTask.id?updatedTask:task)));};// Delete Task\nconst deleteTask=id=>{setTasks(tasks.filter(task=>task.id!==id));};// Sort tasks by status\nconst sortTasks=status=>{setSortStatus(status);};const filteredTasks=sortStatus?tasks.filter(task=>task.status===sortStatus):tasks;return/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",children:/*#__PURE__*/_jsxs(Box,{sx:{mt:4,mb:4,boxShadow:3,padding:3,borderRadius:2},style:{backgroundColor:\"white\"},children:[/*#__PURE__*/_jsx(Header,{onAdd:()=>setShowAddTask(!showAddTask),showAdd:showAddTask}),showAddTask&&/*#__PURE__*/_jsx(AddTaskForm,{onAdd:addTask}),/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"space-between\",my:2,children:/*#__PURE__*/_jsxs(Select,{value:sortStatus,onChange:e=>sortTasks(e.target.value),displayEmpty:true,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"All Tasks\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"not-started\",children:\"Not Started\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"in-progress\",children:\"In-Progress\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"review\",children:\"Review\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"completed\",children:\"Completed\"})]})}),/*#__PURE__*/_jsx(Tasks,{tasks:filteredTasks,onEdit:editTask,onDelete:deleteTask}),/*#__PURE__*/_jsx(Footer,{})]})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Header","AddTaskForm","Tasks","Footer","MenuItem","Select","jsx","_jsx","jsxs","_jsxs","App","tasks","setTasks","isLoaded","setLoaded","showAddTask","setShowAddTask","sortStatus","setSortStatus","savedTasks","JSON","parse","localStorage","getItem","setItem","stringify","addTask","task","newTask","id","Date","now","editTask","updatedTask","map","deleteTask","filter","sortTasks","status","filteredTasks","maxWidth","children","sx","mt","mb","boxShadow","padding","borderRadius","style","backgroundColor","onAdd","showAdd","display","justifyContent","my","value","onChange","e","target","displayEmpty","onEdit","onDelete"],"sources":["/Users/thaihanguyen/Documents/Challenges/To-Do-List-App/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport Header from \"./components/Header\";\nimport AddTaskForm from \"./components/AddTaskForm\";\nimport Tasks from \"./components/Tasks\";\nimport Footer from \"./components/Footer\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [isLoaded, setLoaded] = useState(false);\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [sortStatus, setSortStatus] = useState(\"\");\n\n  // Load tasks from localStorage on initial render\n  //useEffect(callback, [variables to listen to] );\n\n  useEffect(() => {\n    const savedTasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n    setTasks(savedTasks);\n    setLoaded(true);\n  }, []);\n\n  // Save tasks to localStorage whenever tasks array changes\n  useEffect(() => {\n    if (!isLoaded) return;\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  // Add Task\n  const addTask = (task) => {\n    const newTask = { id: Date.now(), ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  // Edit Task\n  const editTask = (updatedTask) => {\n    setTasks(\n      tasks.map((task) => (task.id === updatedTask.id ? updatedTask : task))\n    );\n    // Optional: Save the updated task list to localStorage if needed\n    localStorage.setItem('tasks', JSON.stringify(tasks.map((task) => (task.id === updatedTask.id ? updatedTask : task))));\n\n  };\n  \n    \n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Sort tasks by status\n  const sortTasks = (status) => {\n    setSortStatus(status);\n  };\n\n  const filteredTasks = sortStatus\n    ? tasks.filter((task) => task.status === sortStatus)\n    : tasks;\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box\n        sx={{ mt: 4, mb: 4, boxShadow: 3, padding: 3, borderRadius: 2 }}\n        style={{ backgroundColor: \"white\" }}\n      >\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n\n        {showAddTask && <AddTaskForm onAdd={addTask} />}\n\n        <Box display=\"flex\" justifyContent=\"space-between\" my={2}>\n          {/* <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setShowAddTask(true)}\n          >\n            Add Task\n          </Button> */}\n          <Select\n            value={sortStatus}\n            onChange={(e) => sortTasks(e.target.value)}\n            displayEmpty\n          >\n            <MenuItem value=\"\">All Tasks</MenuItem>\n            <MenuItem value={\"not-started\"}>Not Started</MenuItem>\n            <MenuItem value={\"in-progress\"}>In-Progress</MenuItem>\n            <MenuItem value={\"review\"}>Review</MenuItem>\n            <MenuItem value={\"completed\"}>Completed</MenuItem>\n          </Select>\n        </Box>\n\n        <Tasks tasks={filteredTasks} onEdit={editTask} onDelete={deleteTask} />\n\n        <Footer />\n      </Box>\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}