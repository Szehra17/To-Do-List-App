{"ast":null,"code":"var _jsxFileName = \"/Users/thaihanguyen/Documents/Challenges/To-Do-List-App/src/components/TaskTable.js\";\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"id\",\n  headerName: \"ID\",\n  width: 90\n}, {\n  field: \"name\",\n  headerName: \"Name\",\n  width: 150,\n  editable: true\n}, {\n  field: \"description\",\n  headerName: \"Description\",\n  width: 150,\n  editable: true\n}, {\n  field: \"assignedTo\",\n  headerName: \"Assigned to\",\n  width: 150,\n  editable: true\n}, {\n  field: \"dueDate\",\n  headerName: \"Due Date\",\n  width: 150,\n  editable: true\n}, {\n  field: \"status\",\n  headerName: \"Status\",\n  width: 150,\n  editable: true\n}];\nconst rows = [{\n  id: 1,\n  name: \"Snow\",\n  description: \"Jon\",\n  dueDate: \"25/11/2024\",\n  status: \"not-started\"\n}, {\n  id: 2,\n  name: \"Snow\",\n  description: \"Jon\",\n  dueDate: \"25/11/2024\",\n  status: \"not-started\"\n}, {\n  id: 3,\n  name: \"Snow\",\n  description: \"Jon\",\n  dueDate: \"25/11/2024\",\n  status: \"not-started\"\n}];\nconst TaskTable = () => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 400,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      initialState: {\n        pagination: {\n          paginationModel: {\n            pageSize: 5\n          }\n        }\n      },\n      pageSizeOptions: [5],\n      checkboxSelection: true,\n      disableRowSelectionOnClick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","Box","DataGrid","jsxDEV","_jsxDEV","columns","field","headerName","width","editable","rows","id","name","description","dueDate","status","TaskTable","sx","height","children","initialState","pagination","paginationModel","pageSize","pageSizeOptions","checkboxSelection","disableRowSelectionOnClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thaihanguyen/Documents/Challenges/To-Do-List-App/src/components/TaskTable.js"],"sourcesContent":["import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nconst columns = [\n  {\n    field: \"id\",\n    headerName: \"ID\",\n    width: 90,\n  },\n  {\n    field: \"name\",\n    headerName: \"Name\",\n    width: 150,\n    editable: true,\n  },\n  {\n    field: \"description\",\n    headerName: \"Description\",\n    width: 150,\n    editable: true,\n  },\n  {\n    field: \"assignedTo\",\n    headerName: \"Assigned to\",\n    width: 150,\n    editable: true,\n  },\n  {\n    field: \"dueDate\",\n    headerName: \"Due Date\",\n    width: 150,\n    editable: true,\n  },\n  {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 150,\n    editable: true,\n  },\n];\n\nconst rows = [\n  {\n    id: 1,\n    name: \"Snow\",\n    description: \"Jon\",\n    dueDate: \"25/11/2024\",\n    status: \"not-started\",\n  },\n  {\n    id: 2,\n    name: \"Snow\",\n    description: \"Jon\",\n    dueDate: \"25/11/2024\",\n    status: \"not-started\",\n  },\n  {\n    id: 3,\n    name: \"Snow\",\n    description: \"Jon\",\n    dueDate: \"25/11/2024\",\n    status: \"not-started\",\n  },\n];\n\nconst TaskTable = () => {\n  return (\n    <Box sx={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        initialState={{\n          pagination: {\n            paginationModel: {\n              pageSize: 5,\n            },\n          },\n        }}\n        pageSizeOptions={[5]}\n        checkboxSelection\n        disableRowSelectionOnClick\n      />\n    </Box>\n  );\n};\nexport default TaskTable;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAG,CACd;EACEC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,MAAM;EACbC,UAAU,EAAE,MAAM;EAClBC,KAAK,EAAE,GAAG;EACVC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,KAAK,EAAE,aAAa;EACpBC,UAAU,EAAE,aAAa;EACzBC,KAAK,EAAE,GAAG;EACVC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,KAAK,EAAE,YAAY;EACnBC,UAAU,EAAE,aAAa;EACzBC,KAAK,EAAE,GAAG;EACVC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,KAAK,EAAE,SAAS;EAChBC,UAAU,EAAE,UAAU;EACtBC,KAAK,EAAE,GAAG;EACVC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,KAAK,EAAE,QAAQ;EACfC,UAAU,EAAE,QAAQ;EACpBC,KAAK,EAAE,GAAG;EACVC,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,MAAMC,IAAI,GAAG,CACX;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,MAAM;EACZC,WAAW,EAAE,KAAK;EAClBC,OAAO,EAAE,YAAY;EACrBC,MAAM,EAAE;AACV,CAAC,EACD;EACEJ,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,MAAM;EACZC,WAAW,EAAE,KAAK;EAClBC,OAAO,EAAE,YAAY;EACrBC,MAAM,EAAE;AACV,CAAC,EACD;EACEJ,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,MAAM;EACZC,WAAW,EAAE,KAAK;EAClBC,OAAO,EAAE,YAAY;EACrBC,MAAM,EAAE;AACV,CAAC,CACF;AAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,oBACEZ,OAAA,CAACH,GAAG;IAACgB,EAAE,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAEV,KAAK,EAAE;IAAO,CAAE;IAAAW,QAAA,eACtCf,OAAA,CAACF,QAAQ;MACPQ,IAAI,EAAEA,IAAK;MACXL,OAAO,EAAEA,OAAQ;MACjBe,YAAY,EAAE;QACZC,UAAU,EAAE;UACVC,eAAe,EAAE;YACfC,QAAQ,EAAE;UACZ;QACF;MACF,CAAE;MACFC,eAAe,EAAE,CAAC,CAAC,CAAE;MACrBC,iBAAiB;MACjBC,0BAA0B;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAnBIf,SAAS;AAoBf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}