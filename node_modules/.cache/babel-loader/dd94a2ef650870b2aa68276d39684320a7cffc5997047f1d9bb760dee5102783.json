{"ast":null,"code":"var _jsxFileName = \"/Users/thaihanguyen/Documents/Challenges/To-Do-List-App/src/components/TaskStatusButton.js\";\nimport React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskStatusButton = ({\n  currentStatus,\n  onButtonClick\n}) => {\n  const getButtonLabel = () => {\n    switch (currentStatus) {\n      case \"Not Status\":\n        return \"Accept Task\";\n      case \"In-progress\":\n        return \"Mark to Review\";\n      case \"Review\":\n        return \"Mark Completed\";\n      case \"Completed\":\n        return \"Task Completed\";\n      // Final state\n      default:\n        return \"Accept Task\";\n    }\n  };\n\n  // Determine if the task is completed\n  const isCompleted = currentStatus === \"Completed\";\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    onClick: onButtonClick,\n    disabled: isCompleted,\n    style: {\n      backgroundColor: isCompleted ? \"green\" : undefined,\n      // Change background color to green if completed\n      color: \"white\" // Ensure text is visible on green background\n    },\n    children: getButtonLabel()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskStatusButton;\nexport default TaskStatusButton;\nvar _c;\n$RefreshReg$(_c, \"TaskStatusButton\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","TaskStatusButton","currentStatus","onButtonClick","getButtonLabel","isCompleted","variant","onClick","disabled","style","backgroundColor","undefined","color","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thaihanguyen/Documents/Challenges/To-Do-List-App/src/components/TaskStatusButton.js"],"sourcesContent":["import React from \"react\";\nimport Button from \"@mui/material/Button\";\n\nconst TaskStatusButton = ({ currentStatus, onButtonClick }) => {\n  const getButtonLabel = () => {\n    switch (currentStatus) {\n      case \"Not Status\":\n        return \"Accept Task\";\n      case \"In-progress\":\n        return \"Mark to Review\";\n      case \"Review\":\n        return \"Mark Completed\";\n      case \"Completed\":\n        return \"Task Completed\"; // Final state\n      default:\n        return \"Accept Task\";\n    }\n  };\n\n  // Determine if the task is completed\n  const isCompleted = currentStatus === \"Completed\";\n\n  return (\n    <Button\n      variant=\"contained\"\n      onClick={onButtonClick}\n      disabled={isCompleted}\n      style={{\n        backgroundColor: isCompleted ? \"green\" : undefined, // Change background color to green if completed\n        color: \"white\", // Ensure text is visible on green background\n      }}\n    >\n      {getButtonLabel()}\n    </Button>\n  );\n};\n\nexport default TaskStatusButton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAc,CAAC,KAAK;EAC7D,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,QAAQF,aAAa;MACnB,KAAK,YAAY;QACf,OAAO,aAAa;MACtB,KAAK,aAAa;QAChB,OAAO,gBAAgB;MACzB,KAAK,QAAQ;QACX,OAAO,gBAAgB;MACzB,KAAK,WAAW;QACd,OAAO,gBAAgB;MAAE;MAC3B;QACE,OAAO,aAAa;IACxB;EACF,CAAC;;EAED;EACA,MAAMG,WAAW,GAAGH,aAAa,KAAK,WAAW;EAEjD,oBACEF,OAAA,CAACF,MAAM;IACLQ,OAAO,EAAC,WAAW;IACnBC,OAAO,EAAEJ,aAAc;IACvBK,QAAQ,EAAEH,WAAY;IACtBI,KAAK,EAAE;MACLC,eAAe,EAAEL,WAAW,GAAG,OAAO,GAAGM,SAAS;MAAE;MACpDC,KAAK,EAAE,OAAO,CAAE;IAClB,CAAE;IAAAC,QAAA,EAEDT,cAAc,CAAC;EAAC;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEb,CAAC;AAACC,EAAA,GAhCIjB,gBAAgB;AAkCtB,eAAeA,gBAAgB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}